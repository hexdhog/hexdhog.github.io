<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>hexdhog</title><link>https://hexdhog.com/</link><description>Recent content on hexdhog</description><generator>Hugo -- 0.141.0</generator><language>en-us</language><lastBuildDate>Sun, 19 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://hexdhog.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Bare blinky</title><link>https://hexdhog.com/posts/bare-blinky/</link><pubDate>Sun, 19 Jan 2025 00:00:00 +0000</pubDate><guid>https://hexdhog.com/posts/bare-blinky/</guid><description>&lt;p>I have messed with electronics for quite some time now, pretty much ever since I started programming. Actually, I learned basic C programming by playing in Arduino IDE. So I have a decent understanding of how to write basic programs that run on Arduino-like compatible microcontrollers; but I have a mediocre understanding of what is actually going on when I use the Arduino or, even, the chip&amp;rsquo;s framework. So I want to go down the software stack and understand exactly what really happens under the hood. I think making an LED blink, an extremely basic task, in assembly and without any libraries/frameworks is a decent starting point.&lt;/p></description></item></channel></rss>